MongoDB Notes
---------------------------------------------------------------
Basics:

- Mongo is a "NoSQL" database, meaning no predefined blueprint
for the data is needed
- The format of data in MongoDB is very similar to JSON
- The database is a collection of "documents", where each
document is a record

Example of a document:

{
	"_id" : ObjectId("54c955492b7c8eb2181bd09"),
	"userName" : "User1",
	"Password" : "Password1",
	"Experience" : {
		"Major" : "CSCI",
		"Courses" : ["Course1", "Course2"],
	}
}

- Essentially just like JSON object
	- Field:Value structure

- The ObjectID("") value is an autogenerated value for the document's
ID when it is created

- Can interact with the database using the Mongo Shell, or using Mongoose,
which lets you communicate with the database from the javascript code

Mongo Shell:

- Enter "mongod" in one terminal to start a local server
- Enter "mongo" in another terminal to connect to this local server
- Enter "show dbs" to show a list of all of the created databases
- Enter "use x" to switch to database "x" from the list

- Enter "use new-db" to create and switch to a new database,
called "new-db" for this example
	- This is somewhat similar to creating and switching to a new branch in Git

- Enter "db.users.insert({"userName":"User1","Password":"Password1"})
	- This inserts a single "user" into a new collection called "users"
		- The "user" is the document and "users" is the collection
	- The insert() argument is just a JSON object to insert into the new collection

- Enter "show collections" to see all of the collections in the database
	- The "users" collection should appear for this example

- Enter "db.users.find()" to return all of the documents in the collection
	- Can enter "db.users.find().pretty()" for the documents to be formatted
	in a way that looks like JSON, which makes it easier to read
	- You should also see a "_id":ObjectId("") line in the JSON, which has been
	autogenerated

- As MongoDB is a NoSQL database, other documents inserted into the collection do
no have to match the format
	- For example, we can insert a document that looks like:
		db.users.insert({"userName":"User2"})
	- This works, as we are not required to put a "Password" field in new documents,
	despite the fact that the first one has it
	- This can cause a problem, as you cane easily accidentally add a document with
	the wrong contents